
worker_processes 1;
error_log /dev/stderr notice;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

# Handle Insights SSL/TLS Traffic
stream {

    map $ssl_preread_server_name $insights_backend {
        sso.redhat.com              sso_prod;
        console.stage.redhat.com    insights_stage;
        sso.stage.redhat.com        sso_stage;
        default                     insights_prod;
    }

    upstream insights_prod {
        server console.redhat.com:443 max_fails=3 fail_timeout=10s;
    }

    upstream insights_stage {
        server console.stage.redhat.com:443 max_fails=3 fail_timeout=10s;
    }

    upstream sso_prod {
        server sso.redhat.com:443 max_fails=3 fail_timeout=10s;
    }

    upstream sso_stage {
        server sso.stage.redhat.com:443 max_fails=3 fail_timeout=10s;
    }


    log_format ssl_access '$remote_addr [$time_local] '
      '$protocol $status'
      ' sent: $bytes_sent received: $bytes_received session_time: $session_time'
      ' Upstream - addr: "$upstream_addr" SNI server_name: "$ssl_preread_server_name"'
      ' sent: "$upstream_bytes_sent" received: "$upstream_bytes_received"'
      ' connect_time: "$upstream_connect_time"';
    access_log /dev/stdout ssl_access;
    error_log /dev/stderr  debug;

    server {
        listen                8443;
        ssl_protocols         TLSv1.2 TLSv1.3;
        ssl_preread           on;
        proxy_connect_timeout 5s;
        proxy_pass            $insights_backend;
    }
}

# Handle Insights HTTP Traffic
http {
    log_format  http_access  '$remote_addr - $remote_user [$time_local] "$request"'
      ' $status $body_bytes_sent "$http_referer" '
      ' "$http_user_agent" "$http_x_forwarded_for"';

    access_log /dev/stdout http_access;

    sendfile            on;
    tcp_nopush          on;
    keepalive_timeout   65;
    types_hash_max_size 4096;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /opt/app-root/etc/nginx.d/*.conf;

    server {
        listen       8080;
        server_name  console.redhat.com;
        root         /opt/app-root/src;

        location / {
            proxy_connect_timeout   5s;
            proxy_set_header        Host $host;
            proxy_pass              http://console.redhat.com:80;
        }
    }

    server {
        listen       8080;
        server_name  console.stage.redhat.com;
        root         /opt/app-root/src;

        location / {
            proxy_connect_timeout   5s;
            proxy_set_header        Host $host;
            proxy_pass              http://console.stage.redhat.com:80;
        }
    }

    server {
        listen       8080;
        server_name  sso.redhat.com;
        root         /opt/app-root/src;

        location / {
            proxy_connect_timeout   5s;
            proxy_set_header        Host $host;
            proxy_pass              http://sso.redhat.com:80;
        }
    }

    server {
        listen       8080;
        server_name  sso.stage.redhat.com;
        root         /opt/app-root/src;

        location / {
            proxy_connect_timeout   5s;
            proxy_set_header        Host $host;
            proxy_pass              http://sso.stage.redhat.com:80;
        }
    }
}
